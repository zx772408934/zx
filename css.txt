0.选择器的命名规则：1.驼峰命名   2.不能用中文，拼音也不要用   3.首字母必须是字母。

1.通配选择器(*)定义的规则优先级高于元素继承过来的规则的优先级。

2.!important >ID选择器 > 类选择器 > 标签选择器 >标签内部属性> 通配符 > 继承 > 浏览器默认属性。
 (#ID>p )  大于（p自身的ID） 大于（.类名：hover>p）大于（标签：hover>p）大于  (.类名>p)   大于（p自身的类）
 大于（标签>p）大于 ( p)

3.（外部（外联）样式）External style sheet <（内部（内嵌）样式）Internal style sheet <（内联（行内）样式）Inline style，有个例外的情况，就是如果外部样式放在内部样式的后面，则外部样式将覆盖内部样式。

4.如果子元素的大小超过了其父元素的大小，那么在排列的时候会遵从“从上到下，从左到右”，不会向上突出。

5.padding-bottom不会将该元素“往上顶”，会将该元素下面的元素“向下顶”。

6.padding-top会将该元素“向下顶”，会将该元素下面的元素“向下顶”。

7.使用了float的元素，如果该元素的长度或者宽度超过了父元素的长度或者高度，那么该元素就会“超出”父元素，
使用了float的同级元素相互之间不会覆盖。

8.
9.如果一个部件想要固定在浏览器的某个地方，不要超过浏览器窗口的大小，否则该部件超出的部分会消失。

10.

11.text-align（水平对齐方式，针对文本和行内元素，多个行内元素也有效果），可以继承。

12.使用了绝对定位、固定的标签，如果没有设置宽度或者高度，那么默认的宽度或者高度将会无效（针对块级元素）。

13.元素如果没有设置宽高，里面也没有内容的话，那么即使设置了背景颜色，也看不到。

14.如果是在标签的内部编写样式，如果涉及到了px，那么可以直接写数字，不用写px。

15.有时候标签中的属性，不一定在CSS中也有，反之成立，两者有共同的属性，一般是高度、宽度。

16.标签（块级元素或者行内块级元素）的文本或者行内元素的水平对齐方式可以用text-align，垂直对齐可以用
line-height（只能对一行文字起作用，多行文字不行，对img无效，对span、a有效），或者将标签类型改为table-cell
（表格当中的单元格），然后用vertical-align属性（对一行文字起作用，对多行文字也可以，也可以让div这些块级元素
起作用），如果里面既有文字，又有图片，那么只对图片起作用，如果该标签脱离了文档流，那么该属性将没用；
或者用padding、margin来进行各个方向上的调整。

17.浏览器最小识别12px的字体，浏览器默认的字体大小为16px，em表示浏览器默认字体大小的多少倍，如2em，
字体大小为32px。

18.font-style：italic；表示斜体（有些字体本身没有斜体的话，该属性就没有效果），oblique表示强制斜体
（所有字体都可以斜体）。

19.font-weight表示文字加粗，范围是100-900，也可以用normal（400）、bold（700）、lighter、bolder。

20.text-transform表示字母是否大写，: capitalize;首字母大写    Hello World
             			          uppercase;全部大写     HELLO WORLD
                                                          lowercase;全部小写      hello world

21.text-intent表示首行缩进，缩进的大小以汉字的大小为标准，如缩进32px，是汉字的32px，而不是字母的32px，
相同字体大小的汉字跟字母大小是不一样的。

22. letter-spacing调整文字之间的间距（每个英文字母都会隔开）
      word-spacing调英文单词和单词之间的间距（字母不会）

23.默认的块级元素只有宽度，没有高度。

24.背景图片会覆盖背景颜色，背景图片只能在内容区域，背景颜色还可以在padding和border区域，border会覆盖
背景颜色。

25.如果一个标签没有设置高度，并且里面没有内容的话，那么背景颜色和背景图片就无法显示。

26.图片如果要设置宽度或者高度的话，一般只设置一项，因为会自动等比例缩放，背景图片也可以。（test31）

27.img和文字（可以是单独的文字，也可以是在span或者a标签里面的文字）同时在一个块级元素里面时，默认情况下，
文字会在图片的最底部，如果是多行文字，那么就只有一行文字会在图片的最底部，其他的文字会换行。并且，如果在
块级元素的CSS里面设置display: table-cell;vertical-align: middle;只有图片会垂直居中，里面的文字会在图片的最
底部，如果是多行文字，那么就只有一行文字会在图片的最底部，其他的文字会换行；如果是在img中设置
vertical-align:top,文字会在图片的顶部(只有一行，多余的文字会换行，图片的下一行)；如果是在img中设置
vertical-align:middle,文字会在图片的中部(只有一行，多余的文字会换行，图片的下一行)；如果是在img中设置
vertical-align:bottom,文字会在图片的底部(只有一行，多余的文字会换行，图片的下一行)；
（以上都是它们的父元素宽度比较大的情况下，超出父元素的宽度（指的是父元素剩余的宽度，不够装满一个标签的话，
那么整个标签就会自动换行，父元素的默认最大宽度是屏幕的宽度，这一点跟float不一样），就会自动换行
（中、英文情况下都会））（test26）

28.img和文字（可以是单独的文字，也可以是在span或者a标签里面的文字）同时在一个块级元素里面时，不管img使用
float属性还是vertical-align属性，如果有一段文字在图片的前面并且文字的长度超过了一行，那么超出一行的那一部分
文字就会出现字img的上面，并换行。剩下的文字，如果img使用的是float，那么就会跟图片在一行；如果使用的是
vertical-align属性，那么就只有一行文字会跟图片在一行，其他的会出现在图片的下面，并换行。

29.img和文字（可以是单独的文字，也可以是在span或者a标签里面的文字）同时在一个块级元素里面时，img使用
float时，文字会合在一起；使用vertical-align时，文字会有先后顺序。

30.opacity的取值是0-1,1表示不透明，0表示全透明，该属性可以用在任何地方，并且会透明所有的内容，包括子元素；
rgba只用在设置颜色的地方，并且只设置颜色的透明度。

31.行内元素也可以使用margin（a、span只能左右margin，不能上下margin，行内块元素，
如img、input、button所有方向都可以）、padding（所有方向都可以）、定位（包含绝对定位）、float。

32.使用了float的元素会脱离文档流，但还是会跟着父元素“动”.另外，其他脱离了文档流的标签（比如使用了
绝对定位），其子元素即使没有使用定位，也会跟着该标签动，子元素也类似脱离了文档流。

33.脱离了文档流的元素，就不再属于其父元素。即父元素的大小不再包括脱离了文档流的那个标签的大小。

34.消除浮动带来的影响：
1.给父元素设置宽高 
2.使用了clear属性
3.让父元素跟着子元素一起浮动（不推荐）
4.为父元素设置overflow：hidden属性
5.为父元素设置after属性：div：after{
	clear:both;
	content:"";
	height:0;
	width:0;
	visiblity:hidden;
}

25.行内元素使用了脱离文档流之后就可以设置宽高（span、a等）。

26.如果行内元素（包括文字）超出了父元素的范围，并且已经到了父元素的相邻元素，那么超出的部分就会覆盖在
父元素相邻元素的的上面（不分前后）；如果是块级元素超出了父元素的范围，并且已经到了父元素的相邻元素，那么超出的部分就会被后面的元素覆盖掉，覆盖掉前面的元素。（正常文档流的元素，其他情况，如relative，行内元素如果在前面，会被后面的覆盖掉）。（test62）


元素的内容区域包括子元素（a、span除外，img、input、button可以）中的margin、padding区域。

27.使用了float的元素，如果前面有一个同级元素没有使用浮动，那么该元素就不会覆盖那一个同级元素，而是在同级
元素的下面一行，如果后面有一个同级元素没有使用浮动，那么该元素就会覆盖那一个同级元素（以上都是块级元素）。

行内元素、行内块元素（img），包括文本都不会被覆盖掉，不管在开发文档中，行内元素，包括文本是位于浮动元素的前面还是后面，
浮动元素都会出现在最边上，行内元素，包括文本只有没有超出父元素的宽度，就不会换行。

28.color和text-align属性会继承。
			
29.vertical-align对图片、文字（单行、多行都可以）、块级元素（一个或多个）都有效果。

30.line-height对图片（不推荐）、单行文字、单个或多个行内元素（单行文字）都有效果。

31.两个相邻元素的上下外边距会取最大值，左右外边距会相加。

32.margin：上 右 下 左；  上  左右  下；   上下  左右。

33.line-height会把块级元素当中的多行文本都换行；vertical-align不会。

34.在排版中，如果一个元素的子元素使用了浮动，那么最好给该元素和子元素都设置一个高度和宽度，这样就
不会影响后续的排版。

35.父元素与第一个子元素设置的margin-top会取最大值，会从父元素开始(这是一个bug，解决方法：1.给父元素设置
border，必须包含上边框,而且颜色、大小、类型必须写全 2.给父元素设置overflow：hidden，只能用hidden属性值
3.给父元素设置一个padding-top，必须包含上内边距4.子元素脱离文档流)。（test15，第一个大div，test27）

36.使用了display：inline的标签，不能设置宽高。

36.display：none，不会占据文档流的空间；visibility：hidden（一般与opacity属性一起使用）会占据文档流的空间；

37.使用了table-cell的标签，浏览器默认的宽度会消失，其内容大小可以自己设置，也可以不设置，如果子元素里面有
标签没有使用table-cell，那么它的大小等于子元素的大小（包括span、apadding区域、没有标签的文本），并且优先
级比自己设置的高；如果子元素全都使用了table-cell，那么它的大小就以自己设置的为准，如果子元素的大小超过了它
的大小，子元素的大小就会等比例缩放（根据每个子元素自己设置的宽度的比例）。

如果几个同级标签同时使用table-cell，那么他们之间就不会换行，而且他们的高度都会一样(以高度最高的那一个为标准)，test17）

38.在设置垂直方向上的对齐方式时，都必须给使用垂直对齐方式的元素指定高度。

39.多个img，如果在一个父标签中因为父标签的宽度不够而导致的自动换行，换行后，每一行后会有一个类似
margin-bottom：16px；的距离；多个input、button，如果在一个父标签中因为父标签的宽度不够而导致的自动
换行，换行后，每一行后会有一个类似margin-top16px；的距离；并且，产生的这些间距与在开发文档中换不换行无
关。（test16）

40.多个a、span（内容是全英文，包括英文符号）在一个父标签中，如果在开发文档中相互之间没有换行（不是br标签）
，即使它们一起的宽度超出了父元素的宽度，在浏览器中也不会换行，最多可以超出屏幕的宽度一个标签，然后在换行；
如果在开发文档中相互之间换了行，并且它们一起的宽度超出了父元素的宽度，那么超出的标签在浏览器中就会换行，
换行之后行与行之间不会有间距。有中文的话，如果父元素没有设置宽度的话，每一行最多只有屏幕的宽度，如果父元
素设置了宽度的话，每一行的宽度最多只有父元素的宽度。（test24）

41.<img><input><button>的类型为line-block，<input>虽然可以设置宽高，但是输入的内容只能在一行上，
并且在input的中间。（test16）

42.<br>大小可以通过font-size来改变；<hr>可以改变宽高，背景颜色。使用div也可以实现一条线。

43.超出隐藏的那一部分会“消失”，不会对文档产生任何影响，但是真实存在的。（test19）

44.标签移入时，改变其他标签的样式（后代、相邻、兄弟都可以）。

45.如果一个元素使用了绝对定位、fixed之后没有写top、left，那么它会出现在它本应该存在的位置，但是也会脱离文
档流，意思就是，如果该标签前面没有其他同级标签的话，它就会覆盖掉后面的标签（包括行内元素与文字，这点与
float不同）；如果它前面有标签的话，就会按正常的顺序显示出来。（为了防止不必要的错误，使用了绝对定位、fixed
之后，就必须写top、left）（test21）

46.绝对定位的原点是，父元素的padding（左上left、top或者右下right、bottom）。（test21）

47.使用了relative的元素，向上移动时，会覆盖掉以前的同级元素（不管是否也使用了relative）；向下移动时，会被
使用了relative同级元素覆盖，会覆盖没有使用relative的同级元素。（test22）

48.使用了relative的元素，如果超出了父元素的范围，到达了其父元素相邻兄弟元素的区域。
向上超出时，会覆盖掉以前的元素（不管是否也使用了relative）；向下移动时，会被
使用了relative元素覆盖，会覆盖没有使用relative的元素。（test22）

49.大的框架（header、section、footer等）一般使用relative，其里面的子元素使用absolute。   “父相子绝”。

50.z-index的取值范围为（-1-9999），-1为最低，9999为最高。

51.图片与文字之间的特殊关系（test25）（8.16的作业）。

52.如果一个块级子元素没有设置宽度，并且它里面包含的东西没有超过它默认的宽度，那么它的宽度就是父元素的宽度。

53.如果想使用“行内元素与行内元素之间的关系”，最好是把父元素的宽度设置的比子元素的宽度之和大。

54.使用了table-cell的元素，不能使用margin，可以使用padding，并且里面的子元素还可以使用margin、padding。

55.第一个布局元素(header、section、footer)，最好不要在css中直接使用这几个标签的元素选择器，可以用它们的
类名，最好也不要用ID，并且这些标签宽度、高度可以随意设置、margin（各个方向）、padding（各个方
向）、背景颜色和背景图片、border（解决bug）；一般情况不要在这些框架里面使用table-cell，因为这样会影响布局。

56. border-radius：左上 右上 右下 左下；  左上 /右下     右上/ 左下；  左上   右上/左下   右下;当数值等于或者超出
元素的宽高时，会成为一个圆。如果设置了border，那么border也会跟着内容一起变。

57.有相同样式的标签，可以加一个共同的类。

58.margin可以有负值，在使用的时候，只能用它来进行微调；padding没有负值。

57.在<input>使用placeholder时，字体的颜色在CSS中更改不了，value可以。

58.使用了垂直方向排序的元素，里面的子元素还可以使用使用margin、padding。（悬空margin）

59.  :nth-child()、:first-child、:last-child、:only-child，冒号前面必须指定一个元素（可以是类、ID、标签），元素的
类型必须和位置相匹配，如p:nth-child(1)，表示该P标签必须是父元素当中的第一个子元素，如果p标签前面还有其他子
元素，那么这种写法就是错的，可以用p:nth-of-type(1),即使p元素前面还有其他类型的元素，也只会选择父元素当中的
第一个p元素。

60.p:only:child，表示选中一个元素中唯一的一个p元素（该元素中只有一个元素，并且是p元素）。

61.相邻选择器（+）只能选择一个最近且相邻的那一个元素（test34），兄弟选择器（~），它们两个不能选择该标签本
身，并且只能选择该标签后面的标签。

61.复选框不能设置背景颜色和readOnly。

62.input[type='']、input[type^='']、input[type$='']、input[type*='']字符串匹配属性选择器,这里的input可以是类、
ID、标签。（test29.30）

63.p:nth-child()、p:first-child、p:last-child、p:only-child、p:nth-of-type()结构性伪类选择器，这里的p可以是类、
ID、标签。（test29.30）

64.input[type:'']:checked,read-only,disabled目标伪类选择器，这里的input可以是类、ID、标签。（test29.30）

65.::selection ,改变高光颜色选择器，前面可以指定元素；:not(p),not伪类选择器，这里的p可以是类、ID、标签。
（test29.30）

66.transition：过度的类型   过度的时间   过度的方式   延迟过度的时间；前两个为必选项，并且不能使用
display：none。transition里面可以设置多个过渡，每个过渡同时进行（有延迟的同时开启延迟），还原的时候也会有
延迟，必须要有起始状态和结束状态。

67.伪元素（p：before、p：after）就相当于一个p的子元素，它是一个行内元素（inline），它也会占据文档流，可以
使用CSS，它的定位也是相对于p的位置，但是不能使用伪类（p：before:hover、p：before:visited不起作用）。伪元素
具有较大局限性，改变样式需要结合父元素(p:hover:after)，不能使用相邻选择器，兄弟选择器。before生成的伪元素在
最前面，after生成的伪元素在最后面。(test30)

68.box-shadow，外阴影：X轴偏移（必选）   Y轴偏移（必选）   模糊值（数值越大越模糊，必选） 外延值（四边扩散，可选） 颜色（可选）   inset/outset（内阴影，默认是外阴影），外阴影是从border开始的，如果有border的话,阴影
会被覆盖一部分，没有设置模糊值的话，外延值就不会有阴影 test31）。

69.box-shadow,X表示左右阴影（正数表示左边，负数表示右边），Y轴表示上下阴影（正数表示上边，负数表示下边），
内阴影。（test31）

70.box-shadow,X表示左右阴影（正数表示右边，负数表示左边），Y轴表示上下阴影（正数表示下边，负数表示上边），
外阴影。（test31）

71.box-shadow阴影可以叠加，即可以同时设置多个阴影，前面的会覆盖后面的，并且阴影部分。如果想要周围全都有
阴影的话，可以X轴、Y轴的值设为0，然后通过设置外延值来实现。（test31）

72.外延值和阴影区域都不会占据文档流空间，即不算入元素本身的大小。（test31）

73.脱离了文档流的标签可以使用margin、padding（但是margin：0 auto将无效）。（悬空margin，针对绝对定位、
fixed）（test33）

74.transform只对块级元素有用，inline-block也可以。

75.如果一个元素被同级元素覆盖掉，那么它被覆盖掉的部分的鼠标移入效果将无效；子元素把父元素覆盖掉，父元素的
鼠标移入效果也会有效。

76.只要标签在开发文档中位于父元素当中，那么不管它是否脱离文档流，只要鼠标在它里面，就会触发父元素鼠标移入
的效果，鼠标移入不针对margin区域。

77.如果一个元素的状态为visibility: hidden;，他本身的鼠标移入效果将无效，如果它的父元素有鼠标移入效果，
此时父元素的鼠标移入效果将失效。（test48）

78.transform：translate（X,Y），平移；transform：scale(X,Y)，缩放；transform：skew（X,Y），扭曲；
transform：rotate（X,Y）旋转。以上样式中的X、Y都可以单独写，如transform：translateX（X），必须要
大写，默认是从中心点开始，可以通过transform-origin来设置从哪个地方开始。

79.使用了2D转换的元素，虽然还在文档流中，但是会覆盖正常的文档流中的元素(没有使用定位、float、2D转换的元素)
，优先级（绝对定位/固定/float/relative/2D转换>正常元素）

80.<li>当中的<a>设置颜色，只能通过a{}，不能通过li来设置。

81.调整父元素的z-index无法改变子元素的z-index。

82..使用了绝对定位的标签，其父元素也要使用定位，可以绝对，也可以相对，也可以默认。如果不使用定位，子元素将
不会遵从父元素当中的某些属性，如overflow，定位之后，子元素也不一定会遵从父元素的所有属性，如padding、
margin(当父元素用padding或者margin试图改变其位置时，不会发生作用，因为其位置已经定位，除非父元素的位置发生改变)。

83.after、before、overflow无法使用过渡（transition），有overflow时，只针对overflow，不会针对其他变化过渡,
opacity、rgba、visibility有过渡效果，不过单独设置visibility时，即使设置了过渡，显示的时候也会立即显示，隐藏
的时候会有过渡效果（类似于延迟）（test42）

84.transform：scale，transform-origin：left/right，并且使用了过渡或者动画，不能实现平滑的变化。

85.如果一个元素当中已经有了内容，那么即使将宽度和高度设置为0，内容也会显示出来。（test40）

86.当涉及到inline、inline-block、block、none类型之间的转换时，过渡效果将失效。（test41）

87.当visibility: hidden时;，鼠标的移入效果将失效(不管是元素本身还是父元素)，但是rgba的值为0 
和opacity的值为0时，鼠标移入效果依然有效。（test42）

88.如果一个元素设置了letter-spacing，那么他不仅对自己的文字有效，对子元素里面的文字也有效。
如果设置了word-spacing，那么他只对自己的文字有效，对子元素里面的文字将无效。
另外，汉字会被当成字母处理，即每个汉字之间使用word-spacing将无效，可以使用letter-spacing。（test43）

89.letter-spacing、word-spacing的值是0时，文本将按正常的规则显示出来（即如果每个字母在开发文档中有空格的话，），使用了letter-spacing：0，空格还会存在。（test43）

90.如果设置了rotate（180/360deg等），即使里面有内容，如果不设置过渡的话，也看不到变化。（test44）

91. <a>标签里面的颜色、下划线必须通过a标签本身来修改（标签选择器、class、id），它不会继承父元素的字体颜色
和text-decoration。（test45）

92.<ul>、<li>不管在谁里面设置list-style都可以。

93.如果一个元素被另一个元素的margin区域覆盖掉，覆盖掉的那一部分依然可以触发鼠标移入效果。

94.如果几个元素按正常文档流的顺序（不设置任何CSS样式）排列出来后还存在上下间距的话，可能是父元素设置了
line-height。

95.当一个元素的宽度增加时，位于第二行的文本会自动填充上去；同理，当宽度缩小时，多余的文本（除了单独的英文）会被挤下去（test47）。

96.外延值和阴影是同一个颜色，并且没有透明,可以用rgba来实现透明。外延值会围绕在border后面，并且，鼠标移入效果不针对阴影和外延值区域。（test49）(test53)

97.如果一个元素设置了margin，鼠标移入时，要改变边框的大小的话，此时元素的位置会发生变化，始终
保持固定的margin值。（test49）

98.使用了2D转换的元素，在变化的过程中，将无视原本的margin、定位，即无效。没有使用2D转换，而使用了其他变
化（宽高、改变边框）的元素，在变化过程中，将受到margin、定位的影响。test（49/51）

99.两个使用了浮动的同级元素，如果前面一个元素使用了2D转换，那么前面的层级将会变得比后面的高；
.两个使用了绝对定位、固定的同级元素，即使前面一个元素使用了2D转换，层次也没有后面的高。（test51）
-如果前面一个元素使用了绝对定位、固定，但是没有使用2D转换，后面的元素没有使用绝对定位、固定，但是使用了
2D转换，那么后面的层级将会比前面的高。如果前面的元素使用了2D转换，后面的元素没有使用2D转换，而是使用了
relative，那么后面的层级将会比前面的高。（test53）

100.line-height对块级元素没有用，块级元素默认会排在每一行的最左上角。（test50）

101.使用了2D转换的元素，有点类似于脱离文档流，即父元素的内容大小不在包含它，并且它也不会影响到父元素本来
的布局。

102.同一个元素如果border的类型发生变化，将没有过渡效果。dashed的虚线长一点、dotted的虚线短一点。

103.动画的默认类型不是linear。

104.overflow的区域指的是内容和padding区域，不包括border、margin。（test52）

103.outline和外延值以及阴影会跟在border后面，不过outline的层级比外延值和阴影高，即outline会覆盖外延值和阴影
（test54）

104.outline即使在元素本身变成圆了的时候，也还是会保持矩形。（test54）

105.外延值默认情况下会向元素四周延伸，但是如果设置了阴影方向，外延值就会向设置的那个方向平移，方向设置了
多少数值，就向那个方向平移多少。（test54）

106.当visibility:hidden和opacity：0一起使用的时候，会visibility:hidden为主，此时鼠标的移入效果将失效。（test55

107.定位是以border为起点的，没有border就是padding，然后是内容。（test56）

108.如果有两个同级元素，一个有outline、外延值、阴影，另一个没有，如果有外延值的那个在前面，那么他的外延值
部分将会被覆盖掉；如果有外延值的那个在后面，那么他外延值的部分将会覆盖掉前面的同级元素。（test57）

109.改变背景图片的尺寸时，过渡将无效，background-size。

110.background-color和 background: linear-gradient（）同时使用时，如果background-color在前面，那么它的
效果会被覆盖掉。如果background-color在后面，就不会被覆盖掉，同时 background: linear-gradient（）也不会被
覆盖掉。

111.两个同级元素，前面一个只使用了2D转换，后面的只使用了relative，那么后面的层级比前面的高；
	             前面一个只使用了2D转换，后面的只使用了2D转换，那么后面的层级比前面的高；
	             前面一个同时使用了2D和relative，后面的只使用了relative，那么后面的层级比前面的高；
	             前面一个使用了2D，后面的什么也没有使用，那么前面的层级比后面的高。（test58）

112.设置了-webkit-perspective:500px;的元素，其子元素会获得3D透视效果，值越小距离越近，值越大距离越远。

113.background-image：-webkit-linear-gradient(位置，起始颜色，结束颜色)，设置线性渐变。颜色占据位置的大小可以设置百分比，后面的百分比要比前面的大。第一个百分比是终止位置，第二个是起始位置+前一个的终止位置（中间做过渡）。

114.background-image：-webkit-radial-gradient（圆心的位置，起始颜色，终止颜色），圆心渐变，颜色占比也可以用百分比。

115.如果一个元素在一开始就使用了2D，那么即使设置了过渡，也看不到效果，因为他一开始就已经变成了2D转换后的效果，相当于一个固有属性。（test59）

116.如果一个元素使用了scale，超出了屏幕的大小，那么超出的屏幕左边的部分将会被隐藏，右边的不会被隐藏，会出现滚动条。translate移动如果超出了屏幕，同上。（test59）

117.设置隐藏的方式：display：none；overflow：hidden；opacity：0；visibility：hidden。

118.after、before必须写的一个属性是“content”。

119.行内元素使用float、绝对定位之后，变成line-block。（test60）

120.脱离了文档流的元素，父元素将塌陷。

121.使用了table-cell的元素，如果脱离了文档流，那么vertical-align属性将失效.relative不会。
如果它里面的子元素使用了浮动，那么将依然有效；如果使用了绝对定位或者固定，没有写top或者left的话，top会在最
上面，middle会在元素的最下面，bottom会在元素的下面（外面），紧挨着元素；使用了top或者left的话，vertical-align属性将失效；relative依然有效，如果指定了top或者left的话，那么会在vertical-align的基础上移动。(test61)

122.line-height对脱离了文档流的元素依然有效。	

123.使用了inline-block的元素，默认宽高将失效。

124.inline-block也可以使用line-height、text-align。

125.使用了relative的标签，当它的上一个同级元素位置改变时，它的位置也会跟着改变，即使它最开始指定了top、left。（test63）

126.改变元素的高度或者宽度时，如果是向上或者向左增加，可以将元素的margin向上或者向左设置成负数，增加多少就负多少。（test64）

127.改变元素的高度或者宽度时，如果是向上或者向左增加，可以将元素定位或者浮动，向左增加时，设置固定的right值，向上增加时，设置固定的bottom值。（test65）

128.两个同级元素，如果后面的使用了margin-left、margin-top，并且值为负数，那么后面的就会覆盖前面的，值为多少就覆盖多少。如果前面的使用了margin-right、margin-bottom，并且值为负数，那么前面的长度或者高度就会缩小，值为多少就缩小多少。（test64）

129.form中，即使里面的button按钮没有设置类型，那么默认也会提交form的内容。button里面设置value属性，设置的值不会显示出来。

130.如果一个元素使用了绝对定位或者固定，并且设置了固定值，如果该元素使用了2D转换，如缩放，那么实际上它还是以最开始的大小来确定left、或者top的值，而不是以放大或者缩小后的大小来确定。

131.margin-bottom可以用来解决图片和行内元素之间的误差。

132.当父元素的类型为display：none的时候，里面的所有内容都会从页面消失，包括子元素，但是并不是从文档流删除，他们的节点还存在于文档流之中，只是看不到了。

133.如果一个元素本身没有设置浮动和高度，但是他的兄弟元素和子元素设置了浮动，那么它的子元素将会和它的兄弟元素排在一行。

134.

135.如果一个标签中有多个类，那么这些类的优先级只跟在css里面的先后顺序有关，跟在标签里面的顺序无关。（test68）

136.浮动是相对于父元素的内容区域，不包括padding区域。（test69）

137.使用绝对定位、固定的的标签，将会造成父元素的塌陷，解决方法，设置高度，其他方法不行。（test70）

138.overflow既没有过渡，也没有延迟，visibility没有过渡，但是有延迟。（test71）

139.脱离了文档流的元素，它的子元素也会脱离文档流。

140.媒体查询器的优先级与正常的css相比，谁写在后面谁的优先级最高。

141.固定定位可以为负数。

142.

143.box-shadow的范围是border的后面，不包括margin区域。

144.body默认没有高度，但是可以给背景颜色和图片。

145.高度或者宽度的百分比是相对于父元素（必须是父元素）的设置的内容区域，如果父元素设置的宽度或者高度为0的时候，那么子元素也为0.

146.margin、padding的百分比是相对于父元素设置的内容宽度，没有父元素设置宽高，那么就会以上一级的的内容宽度为标准，不是高度。（test74）

147.宽度或者高度，设置为auto的时候，就是子元素的大小，也就是说，子元素有多大（包括padding、border、margin），它本身就有多大，但是不包括脱离了文档流的子元素。（test74）

148.table标签的优先级比他前面（自身同级或者父元素的同级元素）的标签的优先级高，即使前面的标签脱离了文档流，如果不设置z-index的话，优先级依然比table标签低，设置了z-index之后，优先级比table高。

149.a标签不写herf属性，就不会刷新页面。